#!/bin/bash

make_copy_data(){

	#Record previous copy

	# IL Vulnerability
	mkdir -p ./illinois/Vulnerability_Animation
	cp ./illinois/vulnerability.geojson ./illinois/vulnerability-tmp.geojson #1
	cp ./illinois/Vulnerability_Animation/updates.txt ./illinois/Vulnerability_Animation/updates-tmp.txt #1
}
setup_env(){
	cd /var/covid19_project/wherecovid19_service/wherecovid19_webapp/preprocessing/cronjob
	source /opt/anaconda3/bin/activate covid19
}
should_preprocessing_be_done(){
	echo "Checking checksum"
	#calculate checksum

    chksum_il_vul=`md5sum ./illinois/Vulnerability_Animation/updates.txt | awk -F' '  '{print $1}'`
    chksum_il_vul_tmp=`md5sum ./illinois/Vulnerability_Animation/updates-tmp.txt | awk -F' '  '{print $1}'`
    if [ $chksum_il_vul != $chksum_il_vul_tmp ]
    then
            echo "$chksum_il_vul; $chksum_il_vul_tmp"
            echo "Il Vulnerability updated"
            return 1
    fi

	return 0
}
download_files(){

    # IL Vulnerability
    mkdir -p ./illinois/Vulnerability_Animation
    rsync -a ../illinois/Vulnerability_Animation/* ./illinois/Vulnerability_Animation/ #2
        
}
convert_notebooks(){
        echo "Converting notebooks"
		jupyter nbconvert --to python --output-dir='./illinois/' ../illinois/vulnerability_time_series.ipynb #3
}
run_defineintervels(){
        echo "run_defineintervels"
        cd illinois
        python DefineInterval_vulnerability.ipynb
        if [ $? -ne 0 ]
        then
                restore_data
                exit 1
        fi
        cd ..
}

run_illinois_vulnerability(){
        echo "run_illinois_vulnerability"
        cd illinois
        python vulnerability_time_series.py
        if [ $? -ne 0 ]
        then
            	cd ..
                restore_data
                exit 1
        fi
	cd ..
} #4

restore_data(){
	echo "restoring data"
    
  cp ./illinois/classes_vulnerability-tmp.json ./illinois/classes_vulnerability.json
	cp ./illinois/vulnerability-tmp.geojson ./illinois/vulnerability.geojson #5
  
  destroy_env
}
destroy_env(){
        conda deactivate
}
copy_back_results_webfolder(){
  #Copy needed datasets from parent dir
  cp ./illinois/classes_vulnerability.json ../illinois/
  cp ./illinois/vulnerability.geojson ../illinois/
}
copy_to_shared_folder(){
  base_dir=/data/cigi/cybergis-jupyter/production_data/notebook_shared_data/data/wherecovid19_data/app
  pro_other=$base_dir/processed/other
  cp ./illinois/vulnerability.geojson $pro_other
}


setup_env
make_copy_data
download_files
should_preprocessing_be_done
if [ $? -ne 0 ]
then
	convert_notebooks
	run_illinois_vulnerability #7
	run_defineintervels
	copy_back_results_webfolder
  copy_to_shared_folder
fi
destroy_env
exit 0
